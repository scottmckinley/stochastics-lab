lines(times,f[,"Y2F1"],type="l",lwd=2,lty=4,col="red")
lines(times,f[,"Y2F2"],type="l",lwd=2,lty=4,col="green")
abline(h=0)
abline(v=0)
abline(h=y1f1_s,lty=4)
abline(h=y1f2_s,lty=4,col="blue")
abline(h=y2f1_s,lty=4,col="red")
abline(h=y2f2_s,lty=4,col="green")
plot_max = max(c(y1f1_s,y1f2_s,y2f1_s,y2f2_s))
plot(times,f[,"Y1F1"],type="l",lwd=4,ylim=c(0,1.5*plot_max),
main = "Y#F1.(Black/Red) Y#F2(Blue/Green)")
lines(times,f[,"Y1F2"],type="l",lwd=4,col="blue")
lines(times,f[,"Y2F1"],type="l",lwd=2,col="red")
lines(times,f[,"Y2F2"],type="l",lwd=2,col="green")
abline(h=0)
abline(v=0)
abline(h=y1f1_s,lty=4)
abline(h=y1f2_s,lty=4,col="blue")
abline(h=y2f1_s,lty=4,col="red")
abline(h=y2f2_s,lty=4,col="green")
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
plot_max = max(c(y1y1_s,y1y2_s,y2y2_s))
plot(times,f[,"Y1Y1"],type="l",lwd=4,ylim=c(0,plot_max*1.5),
main = "Y1Y1(Black) Y1Y2(Red) Y2Y2(Blue)")
lines(times,f[,"Y1Y2"],type="l",lwd=2,lty=4,col="red")
lines(times,f[,"Y2Y2"],type="l",lwd=2,col="blue")
abline(h=0)
abline(v=0)
abline(h=y1y1_s,lty=4)
abline(h=y1y2_s,lty=4,col="red")
abline(h=y2y2_s,lty=4,col="blue")
plot(times,f[,"UY1"],type="l",lwd=4,ylim=c(0,1.5*uy1_s),
main = "UY (Black/Red) and UF (Blue/Green) Correlation Plot")
lines(times,f[,"UY2"],lwd=2,lty=4,col="red")
lines(times,f[,"UF1"],lwd=4,col="blue")
lines(times,f[,"UF2"],lwd=2,lty=4,col="green")
abline(h=uy1_s,lty=4)
abline(h=uy2_s,lty=4,col="red")
abline(h=uf1_s,lty=4,col="blue")
abline(h=uf2_s,lty=4,col="green")
abline(h=0)
abline(v=0)
plot(times,f[,"UY1"],type="l",lwd=4,ylim=c(1.8,2.2),
main = "UY (Black/Red) and UF (Blue/Green) Correlation Plot")
lines(times,f[,"UY2"],lwd=2,lty=4,col="red")
lines(times,f[,"UF1"],lwd=4,col="blue")
lines(times,f[,"UF2"],lwd=2,lty=4,col="green")
abline(h=uy1_s,lty=4)
abline(h=uy2_s,lty=4,col="red")
abline(h=uf1_s,lty=4,col="blue")
abline(h=uf2_s,lty=4,col="green")
abline(h=0)
abline(v=0)
-2*lambda_val1 + sqrt(beta_val*g_val_1)*uy1_s + sqrt(beta_val*g_val_2)*uy2_s
-2*lambda_val1*y1y1_s + sqrt(beta_val*g_val_1)*uy1_s + sqrt(beta_val*g_val_2)*uy2_s
-2*lambda_val1*y1y1_s + sqrt(beta_val*g_val_1)*uy1_s + sqrt(beta_val*g_val_1)*uy1_s
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
-(lambda1 + lambda1)*Y1Y1 + sqrt(beta*g1)*UY1 + sqrt(beta*g1)*UY1
-2*lambda_val1*y1y1_s + sqrt(beta*g_val_1)*uy1_s + sqrt(beta*g1)*uy1_s
-2*lambda_val1*y1y1_s + sqrt(beta*g_val1)*uy1_s + sqrt(beta*g1)*uy1_s
g_val_1
-2*lambda_val1*y1y1_s + sqrt(beta*g_val_1)*uy1_s + sqrt(beta*g_val_1)*uy1_s
-2*lambda_val1*y1y1_s + sqrt(beta_val*g_val_1)*uy1_s + sqrt(beta_val*g_val_1)*uy1_s
y1y1_s
-(lambda_val1 + lambda_val1)*y1f1_s + sqrt(beta_val*g_val_1)*uf1_s
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
-(lambda_val1 + lambda_val1)*y1f1_s + 2*sqrt(beta_val*g_val_1)*uf1_s
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
-(lambda_val1 + lambda_val1)*y1f1_s + 2*sqrt(beta_val*g_val_1)*uf1_s
-(lambda_val1 + lambda_val1)*y1f1_s + sqrt(beta_val*g_val_1)*uf1_s
-2*lambda_val1*y1y1_s + sqrt(beta_val*g_val_1)*uy1_s + sqrt(beta_val*g_val_1)*uy1_s
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N1.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
plot(times,f[,"UY1"],type="l",lwd=4,ylim=c(1.9,2.2),
main = "UY (Black/Red) and UF (Blue/Green) Correlation Plot")
lines(times,f[,"UY2"],lwd=2,lty=4,col="red")
lines(times,f[,"UF1"],lwd=4,col="blue")
lines(times,f[,"UF2"],lwd=2,lty=4,col="green")
abline(h=uy1_s,lty=4)
abline(h=uy2_s,lty=4,col="red")
abline(h=uf1_s,lty=4,col="blue")
abline(h=uf2_s,lty=4,col="green")
abline(h=0)
abline(v=0)
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
c_val*sqrt(beta*g_val_1)
c_val*sqrt(beta_val*g_val_1)
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
plot(times,f[,"UU"],type="l",lwd=4,ylim = c(99,101),
#plot(times,f[,"UU"],type="l",lwd=4,ylim = c(0,2*c_val/m_val),
main = "U Autocorrelation")
abline(h=0)
abline(v=0)
abline(h=uu_s,lty=4)
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
1/m*(-(m*lambda1 + gamma)*UY1 + m*sqrt(beta*g1)*UU
)
m_val*sqrt(beta_val*g_val_1)*uu_s
sqrt(beta_val*g_val_1)*uu_s
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
state_s
gamma_val
lambda_val1
-(m*lambda2 + gamma)*UF2
- sqrt(beta*g1)*(Y1F2 - F1F2) - sqrt(beta*g2)*(Y2F2 - F2F2)
-(m_val*lambda_val2 + gamma_val)*uf2_s
- sqrt(beta_val*g_val_1)*(y1f2_s - f1f2_s) - sqrt(beta_val*g_val_2)*(y2f2_s - f2f2_s)
-(m_val*lambda_val2 + gamma_val)*uf2_s
- sqrt(beta_val*g_val_1)*(y1f2_s - f1f2_s) - sqrt(beta_val*g_val_2)*(y2f2_s - f2f2_s)
-(m_val*lambda_val2 + gamma_val)*uf2_s - sqrt(beta_val*g_val_1)*(y1f2_s - f1f2_s) - sqrt(beta_val*g_val_2)*(y2f2_s - f2f2_s)
-(m_val*lambda_val2 + gamma_val)*(uf2_s+0.1) - sqrt(beta_val*g_val_1)*(y1f2_s - f1f2_s) - sqrt(beta_val*g_val_2)*(y2f2_s - f2f2_s)
-(m_val*lambda_val1 + gamma_val)*(uf1_s) - sqrt(beta_val*g_val_1)*(y1f1_s - f1f1_s) - sqrt(beta_val*g_val_1)*(y2f1_s - f1f2_s)
-(m_val*lambda_val1 + gamma_val)*(uf1_s+0.1) - sqrt(beta_val*g_val_1)*(y1f1_s - f1f1_s) - sqrt(beta_val*g_val_1)*(y2f1_s - f1f2_s)
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
plot_max = max(c(uy1_s,uy2_s,uf1_s,uf2_s))
plot(log10(times),log10(f[,"UY1"]),type="l",lwd=4,ylim=c(-15,log10(1.2*plot_max)),
main = "UY (Black/Red) and UF (Blue/Green) Correlation Plot")
lines(log10(times),log10(f[,"UY2"]),lwd=2,col="red")
lines(log10(times),log10(f[,"UF1"]),lwd=4,col="blue")
lines(log10(times),log10(f[,"UF2"]),lwd=2,col="green")
abline(h=log10(uy1_s),lty=4)
abline(h=log10(uy2_s),lty=4,col="red")
abline(h=log10(uf1_s),lty=4,col="blue")
abline(h=log10(uf2_s),lty=4,col="green")
abline(h=0)
abline(v=0)
plot(log10(times),log10(f[,"UY1"]),type="l",lwd=4,ylim=c(-12,log10(-5)),
main = "UY (Black/Red) and UF (Blue/Green) Correlation Plot")
lines(log10(times),log10(f[,"UY2"]),lwd=2,col="red")
lines(log10(times),log10(f[,"UF1"]),lwd=4,col="blue")
plot(log10(times),log10(f[,"UY1"]),type="l",lwd=4,ylim=c(-12,-5),
main = "UY (Black/Red) and UF (Blue/Green) Correlation Plot")
lines(log10(times),log10(f[,"UY2"]),lwd=2,col="red")
lines(log10(times),log10(f[,"UF1"]),lwd=4,col="blue")
lines(log10(times),log10(f[,"UF2"]),lwd=2,col="green")
abline(h=log10(uy1_s),lty=4)
abline(h=log10(uy2_s),lty=4,col="red")
abline(h=log10(uf1_s),lty=4,col="blue")
abline(h=log10(uf2_s),lty=4,col="green")
abline(h=0)
abline(v=0)
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Collaborators/Christel Hohenegger/gle-test-N2.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
x
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
mu_sample
mean(mu_sample)
source('~/Dropbox/Professional/Travel Documents/2018-0512 Penn State/heterogeneous-estimation.R')
source('~/.active-rstudio-document')
source('~/Desktop/brownian motion.R')
source('~/Desktop/brownian motion.R')
source('~/Desktop/brownian motion.R')
plot(t,x,type="s",ylim = c(-3,3),lwd=2)
abline(h=0)
abline(v=0)
plot(t,x,type="s",ylim = c(-3,3),lwd=2,main="Mystery Stochastic Process")
abline(v=0)
abline(h=0)
load("~/Dropbox/Students/Melanie Jensen/Molecular Motors/Presentations/2018-0506 Penn State Stat Discussion/Toy_velocity_post_samp.Rdata")
plot(alpha_samp[1,],alpha_samp[2,])
plot(alpha_samp[,1],alpha_samp[,2])
plot(simple_samp[,1],simple_samp[,2])
plot(simple_samp[,1],simple_samp[,2],ylim = c(0,10),xlim=c(0,10))
plot(alpha_samp[,1],beta_samp[,1])
plot(alpha_samp[,2],beta_samp[,2])
source('~/Desktop/temp.R')
source('~/Desktop/temp.R')
plot(alpha_samp[,1],alpha_samp[,2])
print(p)
print(p_samp)
dim(state_samp)
quantile(p_samp,0.025)
quantile(p_samp[2,],0.025)
quantile(p_samp[,2],0.025)
quantile(p_samp[,2],0.975)
hist(p_samp[,2])
Gamma(40)
gamma(35.7)
lgamma(35.7)
log(gamma(35.7)_
log(gamma(35.7))
z = state_samp([1,])
z = state_samp[1,]
z
v
load("~/Dropbox/Students/Melanie Jensen/Molecular Motors/Presentations/2018-0506 Penn State Stat Discussion/Toy_velocity_post_samp.Rdata")
load("~/Dropbox/Students/Melanie Jensen/Molecular Motors/Presentations/2018-0506 Penn State Stat Discussion/true_values.Rdata")
nu_vec^z
z = state_samp[1,]
nu_vec^z
z
1-z
v
nu
nu_vec
z*log(nu_vec)
v = nu_vec
source('~/Desktop/temp.R')
source('~/Desktop/temp.R')
i = 45
i = 45
ll(nu_vec,alpha_samp[i,],beta_samp[i,],z[i,])
ll(nu_vec,alpha_samp[i,],beta_samp[i,],state_samp[i,])
ll(nu_vec,alpha_samp[i,],beta_samp[i,],state_samp[i,])
source('~/Desktop/temp.R')
ll(nu_vec,alpha_samp[i,],beta_samp[i,],state_samp[i,])
alpha_samp[i,]
source('~/Desktop/temp.R')
source('~/Desktop/temp.R')
exp(ll(nu_vec,alpha_samp[i,],beta_samp[i,],state_samp[i,]))
exp(-10)
exp(-10)
exp(-12)
exp(-20)
exp(-50)
exp(-100)
rexp(50,0.01)
x = rexp(50,0.01)
sum(exp(-x))
exp(-min(x))
sort(x)
simple_samp
source('~/Desktop/temp.R')
source('~/Desktop/temp.R')
log(v)
sum(v)
simple_samp[,2]
simple_samp[,1]
simple_samp[,1]-1
sum(log(v))
lgamma(2)
lgamma(5.4)
lgamma(2.0)
lgamma(2.1)
lgamma(1.9)
Gamma(2)
gamma(2)
sum(log(v))
ll(v,1,1)
ll_simple(v,1,1)
ll_simple(v,1,2)
v
ll_simple(v,1,1)
lgamma(1)
ll_simple = function(v,alpha,beta) {
output = length(v)*(alpha*log(beta) - lgamma(alpha)) + (alpha - 1)*sum(log(v))
- beta*sum(v)
return(output)
}
source('~/Desktop/temp.R')
simple_samp
ll_simple(v,1.15,1.47)
alpha*log(beta) - lgamma(alpha)
ll_simple = function(v,alpha,beta) {
print((alpha*log(beta) - lgamma(alpha)))
output = length(v)*(alpha*log(beta) - lgamma(alpha)) + (alpha - 1)*sum(log(v))
- beta*sum(v)
return(output)
}
num_samp = length(alpha_samp[,1])
mixture_ll = mat.or.vec(num_samp,1)
simple_ll = mat.or.vec(num_samp,1)
for (i in 1:num_samp) {
mixture_ll[i] = ll_mix(nu_vec,alpha_samp[i,],beta_samp[i,],state_samp[i,])
simple_ll[i] = ll_simple(nu_vec,simple_samp[i,1],simple_samp[i,2])
}
1.5*log(1.2)
1.5*log(1.2)*n
1.5*log(1.2)*1000
source('~/Desktop/temp.R')
plot(density(alpha_samp[,1]))
lines(density(beta_samp[,1]),lwd=2)
plot(density(alpha_samp[,1]),lwd=2,xlim = c(0,50))
lines(density(beta_samp[,1]),lwd=2)
m1 = alpha_samp[,1]/beta_samp[,1]
m1
par_1
par_2
quantile(m1,0.025)
quantile(m1,0.975)
m0 = simple_samp[,1]/simple_samp[,2]
m0
mean(p_samp[1,])
mean(p_samp[,1])
mean(m1)*mean(p_samp[,1]) + 1-mean(p_samp[,1])*mean(m2)
m2 = alpha_samp[,2]/beta_samp[,2]
mean(m1)*mean(p_samp[,1]) + 1-mean(p_samp[,1])*mean(m2)
mean(m0)
plot(density(m0),lwd=2,xlim=c(0,1.5))
plot(density(m0),lwd=2,xlim=c(0,1.5),col="blue")
lines(density(m1),lwd=2,xlim=c(0,1.5),lwd=2)
lines(density(m1),lwd=2)
plot(density(m1),lwd=2,xlim=c(0,1.5))
lines(density(m0),lwd=2,col="blue")
lines(density(m2),lwd=2)
abline(h=0)
abline(v=quantile(m1,0.025),lty=4)
abline(v=quantile(m1,0.975),lty=4)
abline(v=quantile(m0,0.025),lty=4,col="blue")
abline(v=quantile(m0,0.975),lty=4,col="blue")
abline(v=quantile(m2,0.025),lty=4)
abline(v=quantile(m2,0.975),lty=4)
abline(v=0.1,col="red",lty=4)
abline(v=1,col="red",lty=4)
plot(density(m1),lwd=2,xlim=c(0,1.5),
main = "Credibility Intervals")
lines(density(m0),lwd=2,col="blue")
lines(density(m2),lwd=2)
abline(h=0)
abline(v=quantile(m1,0.025),lty=4)
abline(v=quantile(m1,0.975),lty=4)
abline(v=0.1,col="red",lty=4)
abline(v=quantile(m0,0.025),lty=4,col="blue")
abline(v=quantile(m0,0.975),lty=4,col="blue")
abline(v=quantile(m2,0.025),lty=4)
abline(v=quantile(m2,0.975),lty=4)
abline(v=1,col="red",lty=4)
quantile(simple_samp[,1],0.25)
quantile(simple_samp[,1],0.025)
print(paste(quantile(simple_samp[,1],0.025),quantile(simple_samp[,1],0.975)))
print(paste(quantile(simple_samp[,1],0.025),quantile(simple_samp[,1],0.975)))
print(paste(quantile(simple_samp[,2],0.025),quantile(simple_samp[,2],0.975)))
print(paste(quantile(alpha_samp[,1],0.025),quantile(alpha_samp[,1],0.975)))
print(paste(quantile(beta_samp[,1],0.025),quantile(beta_samp[,1],0.975)))
print(paste(quantile(alpha_samp[,2],0.025),quantile(alpha_samp[,2],0.975)))
print(paste(quantile(beta_samp[,2],0.025),quantile(beta_samp[,2],0.975)))
print(paste(quantile(p_samp[,1],0.025),quantile(p_samp[,1],0.975)))
plot(density(p_samp),lwd=2)
plot(density(p_samp[1,]),lwd=2)
plot(density(p_samp[,1]),lwd=2)
plot(density(p_samp[,1]),lwd=2,xlim=c(0,1))
abline(h=0)
abline(v=quantile(p_samp[,1],0.025),lty=4)
abline(v=quantile(p_samp[,1],0.975),lty=4)
plot(density(p_samp[,1]),lwd=2,xlim=c(0,1),main="Posterior Distribution for p")
abline(h=0)
abline(v=quantile(p_samp[,1],0.025),lty=4)
abline(v=quantile(p_samp[,1],0.975),lty=4)
print(paste(quantile(m0,0.025),quantile(m0,0.975)))
print(paste(quantile(m1,0.025),quantile(m1,0.975)))
print(paste(quantile(m2,0.025),quantile(m2,0.975)))
hist(nu_vec)
hist(nu_vec,breaks=20)
hist(nu_vec,breaks=30)
hist(nu_vec,breaks=25)
hist(nu_vec,breaks=25)
hist(nu_vec,breaks=25,main="Histogram of Original Data")
z
sum(z)
single_dist = rgamma(100,simple_samp[1,1],rate = simple_samp[1,2])
hist(single_dist,breaks=25,main="Histogram of Original Data")
single_dist = rgamma(100,simple_samp[2,1],rate = simple_samp[2,2])
hist(single_dist,breaks=25,main="Histogram of Original Data")
single_dist = rgamma(100,simple_samp[2,1],rate = simple_samp[2,2])
hist(single_dist,breaks=25,main="Histogram of Original Data")
single_dist = rgamma(100,simple_samp[2,1],rate = simple_samp[2,2])
hist(single_dist,breaks=25,main="Histogram of Original Data")
two_dist1 = rgamma(100,alpha_samp[1,1],rate = beta_samp[1,2])
two_dist2 = rgamma(100,alpha_samp[1,2],rate = beta_samp[1,2])
v = z*two_dist2 +(1-z)*two_dist2
hist(v,breaks=25,main="Histogram of Model 2")
two_dist1 = rgamma(100,alpha_samp[1,1],rate = beta_samp[1,2])
two_dist2 = rgamma(100,alpha_samp[1,2],rate = beta_samp[1,2])
v = z*two_dist2 +(1-z)*two_dist2
hist(v,breaks=25,main="Histogram of Model 2")
two_dist1 = rgamma(100,alpha_samp[10,1],rate = beta_samp[10,2])
two_dist2 = rgamma(100,alpha_samp[10,2],rate = beta_samp[10,2])
v = z*two_dist2 +(1-z)*two_dist2
hist(v,breaks=25,main="Histogram of Model 2")
alpha_samp[10,2]
alpha_samp[10,1]
beta_samp[10,2]
beta_samp[10,1]
two_dist1 = rgamma(100,alpha_samp[10,1],rate = beta_samp[10,2])
two_dist2 = rgamma(100,alpha_samp[10,2],rate = beta_samp[10,2])
v = z*two_dist2 +(1-z)*two_dist2
hist(v,breaks=25,main="Histogram of Model 2")
v
two_dist1 = rgamma(100,alpha_samp[10,1],rate = beta_samp[10,2])
two_dist2 = rgamma(100,alpha_samp[10,2],rate = beta_samp[10,2])
v = z*two_dist2 +(1-z)*two_dist1
hist(v,breaks=25,main="Histogram of Model 2")
alpha_samp[10,2]
two_dist1 = rgamma(100,alpha_samp[10,1],rate = beta_samp[10,2])
two_dist2 = rgamma(100,alpha_samp[10,2],rate = beta_samp[10,2])
v = z*two_dist2 +(1-z)*two_dist1
hist(v,breaks=25,main="Histogram of Model 2")
two_dist1 = rgamma(100,alpha_samp[10,1],rate = beta_samp[10,1])
two_dist2 = rgamma(100,alpha_samp[10,2],rate = beta_samp[10,2])
v = z*two_dist2 +(1-z)*two_dist1
hist(v,breaks=25,main="Histogram of Model 2")
log10(3.66)
log10(3.66e40)
source('~/Documents/Github Local/stochastics-lab/code/brownian motion.R')
source('~/Documents/Github Local/stochastics-lab/code/brownian motion.R')
setwd("~/Documents/Github Local/stochastics-lab/code")
source('~/Documents/Github Local/stochastics-lab/code/brownian motion.R')
source('~/Documents/Github Local/stochastics-lab/code/brownian motion.R')
source('~/Documents/Github Local/stochastics-lab/code/plot_functions.R')
source('~/Documents/Github Local/stochastics-lab/code/brownian motion.R')
source('~/Documents/Github Local/stochastics-lab/code/plot_functions.R')
source('~/Documents/Github Local/stochastics-lab/code/brownian motion.R')
source('~/Documents/Github Local/stochastics-lab/code/plot_functions.R')
source('~/Documents/Github Local/stochastics-lab/code/brownian motion.R')
source('~/Documents/Github Local/stochastics-lab/code/brownian motion.R')
